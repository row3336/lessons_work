'''
1 уровень:
1) Есть 2 словаря. Объединить их без помощи функции update

2) Есть словарь с числовыми значениями. Посчитать среднюю по значениям

3) Даны два списка одинаковой длины. Необходимо создать из них словарь таким образом, чтобы элементы первого списка были ключами,
 а элементы второго — соответственно значениями нашего словаря.

4) Когда Антон прочитал «Войну и мир», ему стало интересно,
сколько слов и в каком количестве используется в этой книге.
Помогите Антону написать упрощённую версию такой программы,
которая сможет подсчитать слова, разделённые пробелом и вывести получившуюся статистику.
Программа должна считывать одну строку со стандартного ввода и
выводить для каждого уникального слова в этой строке число его повторений (без учёта регистра)
в формате "слово количество" (см. пример вывода).
Порядок вывода слов может быть произвольным, каждое уникальное слово  должно выводиться только один раз

5) Получить json словарь с сайта https://chainid.network/chains.json (с помощью requests) и вывести информацию о всех сетях в формате:
"name | первое rpc | есть ли поддержка EIP1559 | название нативной монеты | decimals нативной монеты | chain id | ссылка на експлорер"

6) Пользователь вводит chain_id и нужно вывести coin symbol (название нативной монеты в этой сети).
 Для получения информации использовать json словарь с сайта https://chainid.network/chains.json (с помощью requests)'''

# 1) Есть 2 словаря. Объединить их без помощи функции update
# 2) Есть словарь с числовыми значениями. Посчитать среднюю по значениям

# d1 = {
#     'one': 1,
#     'two': 2,
#     'three': 3,
# }
# d2 = {
#     'four': 4,
#     'five': 5,
#     'six': 6,
# }
# for key, val in d2.items():
#     d1[key] = val
# print(d1) #объединение
# i = 0
# summ = 0
# for val in d1.values():
#     summ += int(val)
#     i += 1
# print(f'summ = {summ}, elements = {i}')
# print('average =', summ / i) # среднее по числовым значениям

#
# 3) Даны два списка одинаковой длины. Необходимо создать из них словарь таким образом, чтобы элементы первого списка были ключами,
#  а элементы второго — соответственно значениями нашего словаря.
# lst1 = ["one", "two", "three", "four", "five", "six", "seven"]
# lst2 = ['1', '2', '3', '4', '5', '6', '7']
# d = {}
# i = 0
# for _ in lst1:
#     d[_] = lst2[i]
#     i += 1
# print(d)


#
# 4) Когда Антон прочитал «Войну и мир», ему стало интересно,
# сколько слов и в каком количестве используется в этой книге.
# Помогите Антону написать упрощённую версию такой программы,
# которая сможет подсчитать слова, разделённые пробелом и вывести получившуюся статистику.
# Программа должна считывать одну строку со стандартного ввода и
# выводить для каждого уникального слова в этой строке число его повторений (без учёта регистра)
# в формате "слово количество" (см. пример вывода).
# Порядок вывода слов может быть произвольным, каждое уникальное слово  должно выводиться только один раз

'''
На другой день, простившись только с одним графом, не дождавшись выхода дам, князь Андрей поехал домой. Уже было начало июня, когда князь Андрей, возвращаясь домой, въехал опять в ту березовую рощу, в которой этот старый, корявый дуб так странно и памятно поразил его. Бубенчики еще глуше звенели в лесу, чем месяц тому назад; все было полно, тенисто и густо; и молодые ели, рассыпанные по лесу, не нарушали общей красоты и, подделываясь под общий характер, нежно зеленели пушистыми молодыми побегами. Целый день был жаркий, где-то собиралась гроза, но только небольшая тучка брызнула на пыль дороги и на сочные листья. Левая сторона леса была темна, в тени; правая, мокрая, глянцевитая, блестела на солнце, чуть колыхаясь от ветра. Все было в цвету; соловьи трещали и перекатывались то близко, то далеко. «Да, здесь, в этом лесу, был этот дуб, с которым мы были согласны, — подумал князь Андрей. — Да где он? » — подумал опять князь Андрей, глядя на левую сторону дороги и, сам того не зная, не узнавая его, любовался тем дубом, которого он искал. Старый дуб, весь преображенный, раскинувшись шатром сочной, темной зелени, млел, чуть колыхаясь в лучах вечернего солнца. Ни корявых пальцев, ни болячек, ни старого горя и недоверия — ничего не было видно. Сквозь столетнюю жесткую кору пробились без сучков сочные, молодые листья, так что верить нельзя было, что это старик произвел их. «Да это тот самый дуб», — подумал князь Андрей, и на него вдруг нашло беспричинное весеннее чувство радости и обновления. Все лучшие минуты его жизни вдруг в одно и то же время вспомнились ему. И Аустерлиц с высоким небом, и мертвое укоризненное лицо жены, и Пьер на пароме, и девочка, взволнованная красотою ночи, и эта ночь, и луна — и все это вдруг вспомнилось ему. «Нет, жизнь не кончена и тридцать один год, — вдруг окончательно беспеременно решил князь Андрей. — Мало того, что я знаю все то, что есть во мне, надо, чтоб и все знали это: и Пьер, и эта девочка, которая хотела улететь в небо, надо, чтобы все знали меня, чтобы не для одного меня шла моя жизнь, чтобы не жили они так, как эта девочка, независимо от моей жизни, чтобы на всех она отражалась и чтобы все они жили со мною вместе!»   Возвратившись из этой поездки, князь Андрей решил осенью ехать в Петербург и придумал разные причины этого решения. Целый ряд разумных, логических доводов, почему ему необходимо ехать в Петербург и даже служить, ежеминутно был готов к его услугам. Он даже теперь не понимал, как мог он когда-нибудь сомневаться в необходимости принять деятельное участие в жизни, точно так же как месяц тому назад он не понимал, как могла бы ему прийти мысль уехать из деревни. Ему казалось ясно, что все его опыты жизни должны были пропасть даром и быть бессмыслицей, ежели бы он не приложил их к делу и не принял опять деятельного участия в жизни. Он даже не понимал того, как на основании таких же бедных разумных доводов прежде очевидно было, что он бы унизился, ежели бы теперь, после своих уроков жизни, опять бы поверил в возможность приносить пользу и в возможность счастия и любви. Теперь разум подсказывал совсем другое. После этой поездки князь Андрей стал скучать в деревне, прежние занятия не интересовали его, и часто, сидя один в своем кабинете, он вставал, подходил к зеркалу и долго смотрел на свое лицо. Потом он отворачивался и смотрел на портрет покойницы Лизы, которая с взбитыми à la grecque буклями нежно и весело смотрела на него из золотой рамки. Она уже не говорила мужу прежних страшных слов, она просто и весело с любопытством смотрела на него. И князь Андрей, заложив назад руки, долго ходил по комнате, то хмурясь, то улыбаясь, передумывая те неразумные, невыразимые словом, тайные, как преступление, мысли, связанные с Пьером, с славой, с девушкой на окне, с дубом, с женской красотой и любовью, которые изменили всю его жизнь. И в эти-то минуты, когда кто входил к нему, он бывал особенно сух, строг, решителен и в особенности неприятно логичен. — Mon cher 1, — бывало, скажет, входя в такую минуту, княжна Марья. — Николушке нельзя нынче гулять: очень холодно. — Ежели бы было тепло, — в такие минуты особенно сухо отвечал князь Андрей своей сестре, — то он бы пошел в одной рубашке, а так как холодно, надо надеть на него теплую одежду, которая для этого и выдумана, вот что следует из того, что холодно, а не то чтоб оставаться дома, когда ребенку нужен воздух, — говорил он с особенной логичностью, как бы наказывая кого-то за всю эту тайную, нелогичную, происходившую в нем внутреннюю работу. Княжна Марья думала в этих случаях о том, как сушит мужчин эта умственная работа.
'''

# text = input('введите текст :')
# text = text.lower()
# text += ' '
# words_list = []
# d = {}
# word = ''
#
# #билдим список слов
# for symb in text:
#     if symb == '.' or symb == ',' or symb == '!' or symb == '?' or symb == '—' or symb == '«' or symb == '»' or symb == ';' or symb == ':' or symb == '(' or symb == ')':
#         continue
#     elif symb == ' ':
#         if word == '':
#             continue
#         words_list.append(word)
#         word = ''
#     else:
#         word += symb
# print(words_list)
#
# #билдим словарь с количеством вхождений
# for w in words_list:
#     if w in d:
#         d[w] += 1
#     else:
#         d[w] = 1
# print(d)
#
# #сортируем в порядке убывания, dict() для преобразования кортежей в ключ-значения
# sorted_d = dict(sorted(d.items(), key=lambda item: item[1], reverse=True))
# print(sorted_d)