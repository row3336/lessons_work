'''
Задачи на работу с функциями:
1) Написать функцию, которая будет искать и выводить на экран минимальное число, большее 300 и кратное 19.

2) Написать функцию, которая будет обменивать местами первую и последнюю цифру числа N (1234 → 4231).

3) Написать функцию, которая будет определять, делится ли число N на: 2, 3, 4, 5, ... (без использования оператора % )

4) Написать функцию, которая будет вычислять и выводить на экран значение выражения
N^M без использования оператора возведения в степень (**).

5) С клавиатуры вводится пять чисел. Для каждого из них вывести,
является ли оно степенью числа 3. Вынести определение степени в функцию.

6) Реализовать набор функций для работы со списком:
• Ввод с клавиатуры/инициализация случайными числами (с параметрами).
• Вывод списка на экран (в одну строчку).
• Подсчет максимума и минимума (с индексами).
• Подсчет количества элементов, равных (больших/меньших) N.
• Добавление элемента К [в конец массива/на N-ю позицию].
• Удаление из списка [последнего/Nго элемента].
• Сортировка списка по (возрастанию/убыванию). Повторяющиеся — убирать.

7) Найти третий максимум в списке.

8) Сдвинуть все элементы массива на два вправо. Оставшиеся элементы — поставить слева в том же порядке.

9) Вставить K после максимального элемента.
'''

# 1) Написать функцию, которая будет искать и выводить на экран минимальное число, большее 300 и кратное 19.

# def min_4islo(first:300, second:19):
#     i = first
#     while i % second != 0:
#         i += 1
#     print(i)
#
#
# min_4islo(200, 90)


# 2) Написать функцию, которая будет обменивать местами первую и последнюю цифру числа N (1234 → 4231).
# def foo(n):
#     n_tmp = n
#     i = 1
#     while n_tmp > 10:
#         n_tmp //= 10
#         i *= 10
#     first = n // i
#     last = n % 10
#     mid = n % i // 10
#
#     result_num = int(str(last) + str(mid) + str(first)) #1 конкатенация с преобразованием в число
#     print(result_num, type(result_num))
#
#     result_num = last * i + mid * 10 + first #2 математический способ решения
#     print(result_num)
#
#
# foo(82345671)

# 3) Написать функцию, которая будет определять, делится ли число N на: 2, 3, 4, 5, ... (без использования оператора % )
# def foo(a, b):
#     i = 0
#     while i < a:
#         i += b
#     print(i)
#     if i == a:
#         print('delitsia')
#     else:
#         print('ne delitsia')
#
#
# foo(1243, 2)


# 4) Написать функцию, которая будет вычислять и выводить на экран значение выражения
# N^M без использования оператора возведения в степень (**).
#
# def foo(a, b):
#     i = 1
#     res = 1
#     while i < b:
#         res *= a
#         i += 1
#     print(res)
#     # res = 1
#     # for _ in range(b):
#     #     res *= a
#     # print(res)
#
#
# foo(4, 4)

# 5) С клавиатуры вводится пять чисел. Для каждого из них вывести,
# является ли оно степенью числа 3. Вынести определение степени в функцию.


# def foo(num):
#     # 12
#     # 3 * 3 = 9
#     # 3 * 3 * 3 = 27 stop
#     res = 1
#     d = 3
#     while res < num:
#         res *= d
#     if res == num:
#         print(f'{res} есть степенью 3')
#     else:
#         print(f'{res} не является степенью 3')
#
#
# lst = [int(input('введите число: ')) for _ in range(5) # ввод 5 чисел в список с помощью цикла
# for i in lst:
#     foo(i)


# 6) Реализовать набор функций для работы со списком:
# • Ввод с клавиатуры/инициализация случайными числами (с параметрами).
# • Вывод списка на экран (в одну строчку).
# • Подсчет максимума и минимума (с индексами).
# • Подсчет количества элементов, равных (больших/меньших) N.
# • Добавление элемента К [в конец массива/на N-ю позицию].
# • Удаление из списка [последнего/Nго элемента].
# • Сортировка списка по (возрастанию/убыванию). Повторяющиеся — убирать.